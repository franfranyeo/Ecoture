{
  "openapi": "3.0.1",
  "info": {
    "title": "Ecoture",
    "version": "1.0"
  },
  "paths": {
    "/Address": {
      "get": {
        "tags": [
          "Address"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddressDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Address"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAddressRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAddressRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddAddressRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDTO"
                }
              }
            }
          }
        }
      }
    },
    "/Address/{id}": {
      "get": {
        "tags": [
          "Address"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Address"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAddressRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAddressRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAddressRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Address"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Content/{id}": {
      "get": {
        "tags": [
          "Content"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Content"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Content"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Content": {
      "post": {
        "tags": [
          "Content"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentDto"
                }
              }
            }
          }
        }
      }
    },
    "/CreditCard": {
      "get": {
        "tags": [
          "CreditCard"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "CreditCard"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCreditCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCreditCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddCreditCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/CreditCard/{id}": {
      "get": {
        "tags": [
          "CreditCard"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "CreditCard"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCreditCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCreditCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCreditCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "CreditCard"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Enquiry": {
      "get": {
        "tags": [
          "Enquiry"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EnquiryDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnquiryDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnquiryDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Enquiry"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Enquiry"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Enquiry"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Enquiry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EnquiryDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnquiryDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnquiryDTO"
                }
              }
            }
          }
        }
      }
    },
    "/Enquiry/{id}": {
      "get": {
        "tags": [
          "Enquiry"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EnquiryDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnquiryDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnquiryDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Enquiry"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEnquiryRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEnquiryRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEnquiryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Enquiry"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Enquiry/Summary": {
      "get": {
        "tags": [
          "Enquiry"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/File/upload": {
      "post": {
        "tags": [
          "File"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UploadResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Newsletter/{id}": {
      "get": {
        "tags": [
          "Newsletter"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Newsletter"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsletterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsletterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewsletterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Newsletter"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Newsletter": {
      "post": {
        "tags": [
          "Newsletter"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsletterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsletterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewsletterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Product": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddProductRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddProductRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          }
        }
      }
    },
    "/Product/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/Response": {
      "get": {
        "tags": [
          "Response"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Response"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddResponse"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddResponse"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddResponse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/Response/{id}": {
      "get": {
        "tags": [
          "Response"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/reviews/{productId}": {
      "get": {
        "tags": [
          "Review"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/reviews": {
      "post": {
        "tags": [
          "Review"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddReviewRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddReviewRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddReviewRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/reviews/{id}": {
      "put": {
        "tags": [
          "Review"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddReviewRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddReviewRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddReviewRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Review"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/User/register": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/User/login": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/User/google": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleLoginRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleLoginRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleLoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/User/auth": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/User/create-staff": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStaffRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStaffRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStaffRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/User/update-mfa": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMfaRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMfaRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMfaRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/User/edit-profile": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditProfileRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditProfileRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditProfileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/User/change-password": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/User/forgot-password": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/User/reset-password": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/User/{id}/delete-request": {
      "post": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/User/{id}/permanent-delete": {
      "post": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/User/{id}/hard-delete": {
      "delete": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/User": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/User/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/User/{UserId}": {
      "put": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "UserId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/verify/email": {
      "post": {
        "tags": [
          "Verification"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailVerificationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailVerificationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmailVerificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/verify/email-otp": {
      "post": {
        "tags": [
          "Verification"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpVerificationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpVerificationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OtpVerificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/verify/phone": {
      "post": {
        "tags": [
          "Verification"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SmsVerificationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SmsVerificationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SmsVerificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/verify/phone-otp": {
      "post": {
        "tags": [
          "Verification"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpVerificationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpVerificationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OtpVerificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/verify/change-email": {
      "post": {
        "tags": [
          "Verification"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailChangeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailChangeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmailChangeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/verify/change-email-otp": {
      "post": {
        "tags": [
          "Verification"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailChangeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailChangeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailChangeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddAddressRequest": {
        "required": [
          "description",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 3,
            "type": "string"
          },
          "imageFile": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddCreditCardRequest": {
        "required": [
          "cardHolderName",
          "cardNumber",
          "cvv",
          "expiryMonth",
          "expiryYear"
        ],
        "type": "object",
        "properties": {
          "cardHolderName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "cardNumber": {
            "maxLength": 16,
            "minLength": 1,
            "type": "string"
          },
          "expiryMonth": {
            "type": "integer",
            "format": "int32"
          },
          "expiryYear": {
            "type": "integer",
            "format": "int32"
          },
          "cvv": {
            "maxLength": 3,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AddProductRequest": {
        "required": [
          "categoryName",
          "colors",
          "description",
          "fit",
          "longDescription",
          "price",
          "sizes",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 3,
            "type": "string"
          },
          "longDescription": {
            "maxLength": 1000,
            "minLength": 3,
            "type": "string"
          },
          "price": {
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "categoryName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "colors": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fit": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string"
          },
          "imageFile": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "sizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SizeRequest"
            }
          }
        },
        "additionalProperties": false
      },
      "AddResponse": {
        "required": [
          "enquiryId",
          "message"
        ],
        "type": "object",
        "properties": {
          "enquiryId": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "maxLength": 1000,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AddReviewRequest": {
        "required": [
          "comment",
          "productId",
          "rating"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string"
          },
          "rating": {
            "maximum": 5,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AddressDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "imageFile": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "user": {
            "$ref": "#/components/schemas/UserBasicDTO"
          }
        },
        "additionalProperties": false
      },
      "ChangePasswordRequest": {
        "required": [
          "currentPassword",
          "newPassword"
        ],
        "type": "object",
        "properties": {
          "currentPassword": {
            "maxLength": 50,
            "minLength": 8,
            "pattern": "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$",
            "type": "string"
          },
          "newPassword": {
            "maxLength": 50,
            "minLength": 8,
            "pattern": "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ContentDto": {
        "type": "object",
        "properties": {
          "contentId": {
            "type": "integer",
            "format": "int32"
          },
          "preferencesId": {
            "type": "integer",
            "format": "int32"
          },
          "membership": {
            "type": "boolean"
          },
          "productIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateStaffRequest": {
        "required": [
          "email",
          "firstName",
          "lastName",
          "password"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 100,
            "minLength": 2,
            "pattern": "^[\\p{L} '-,.]+$",
            "type": "string"
          },
          "lastName": {
            "maxLength": 100,
            "minLength": 2,
            "pattern": "^[\\p{L} '-,.]+$",
            "type": "string"
          },
          "email": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "maxLength": 50,
            "minLength": 8,
            "pattern": "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$",
            "type": "string"
          },
          "pfpURL": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EditProfileRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 100,
            "minLength": 2,
            "pattern": "^[A-Za-z\\s'\\-.,]+$",
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 100,
            "minLength": 2,
            "pattern": "^[A-Za-z\\s'\\-.,]+$",
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 255,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "mobileNo": {
            "pattern": "^\\+65 [89]\\d{3} \\d{4}$",
            "type": "string",
            "nullable": true
          },
          "dateofBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "pfpURL": {
            "type": "string",
            "nullable": true
          },
          "is2FAEnabled": {
            "type": "boolean",
            "nullable": true
          },
          "mfaMethods": {
            "$ref": "#/components/schemas/MfaResponse"
          },
          "isEmailVerified": {
            "type": "boolean",
            "nullable": true
          },
          "isPhoneVerified": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EditUserRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "dateofBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          },
          "pfpURL": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmailChangeRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "newEmail": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmailVerificationRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Enquiry": {
        "required": [
          "email",
          "message",
          "subject"
        ],
        "type": "object",
        "properties": {
          "enquiryId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "email": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "subject": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "message": {
            "minLength": 1,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/EnquiryStatus"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "responses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Response"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EnquiryDTO": {
        "type": "object",
        "properties": {
          "enquiryId": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "responses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EnquiryStatus": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ForgotPasswordRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          }
        },
        "additionalProperties": false
      },
      "GoogleLoginRequest": {
        "required": [
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LoginRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "maxLength": 50,
            "minLength": 8,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Membership": {
        "type": "object",
        "properties": {
          "membershipId": {
            "type": "integer",
            "format": "int32"
          },
          "tier": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "totalSpent": {
            "type": "number",
            "format": "double"
          },
          "totalPoints": {
            "type": "integer",
            "format": "int32"
          },
          "membershipStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "membershipEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastTierUpgradeDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false
      },
      "MfaResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "sms": {
            "type": "boolean"
          },
          "email": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "NewsletterDto": {
        "type": "object",
        "properties": {
          "issueId": {
            "type": "integer",
            "format": "int32"
          },
          "issueTitle": {
            "type": "string",
            "nullable": true
          },
          "contentId": {
            "type": "integer",
            "format": "int32"
          },
          "dateSent": {
            "type": "string",
            "format": "date-time"
          },
          "newsletterCategory": {
            "type": "string",
            "nullable": true
          },
          "contentIds": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OtpVerificationRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNo": {
            "type": "string",
            "nullable": true
          },
          "otp": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PointsTransaction": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "pointsEarned": {
            "type": "integer",
            "format": "int32"
          },
          "pointsSpent": {
            "type": "integer",
            "format": "int32"
          },
          "transactionType": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time"
          },
          "voucherId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "referralId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reviewId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "voucher": {
            "$ref": "#/components/schemas/Voucher"
          },
          "referral": {
            "$ref": "#/components/schemas/Referral"
          }
        },
        "additionalProperties": false
      },
      "PriceRange": {
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "ProductColorDTO": {
        "type": "object",
        "properties": {
          "colorName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "longDescription": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "stockQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "fit": {
            "type": "string",
            "nullable": true
          },
          "priceRange": {
            "$ref": "#/components/schemas/PriceRange"
          },
          "imageFile": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "user": {
            "$ref": "#/components/schemas/UserBasicDTO"
          },
          "sizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSizeDTO"
            },
            "nullable": true
          },
          "colors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductColorDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductSizeDTO": {
        "type": "object",
        "properties": {
          "sizeName": {
            "type": "string",
            "nullable": true
          },
          "stockQuantity": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RedemptionStatus": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Referral": {
        "type": "object",
        "properties": {
          "referralId": {
            "type": "integer",
            "format": "int32"
          },
          "referrerUserId": {
            "type": "integer",
            "format": "int32"
          },
          "refereeUserId": {
            "type": "integer",
            "format": "int32"
          },
          "referralDate": {
            "type": "string",
            "format": "date-time"
          },
          "referrerUser": {
            "$ref": "#/components/schemas/User"
          },
          "refereeUser": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false
      },
      "RegisterRequest": {
        "required": [
          "email",
          "firstName",
          "lastName",
          "password"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 100,
            "minLength": 2,
            "pattern": "^[A-Za-z\\s'\\-.,]+$",
            "type": "string"
          },
          "lastName": {
            "maxLength": 100,
            "minLength": 2,
            "pattern": "^[A-Za-z\\s'\\-.,]+$",
            "type": "string"
          },
          "email": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "maxLength": 50,
            "minLength": 8,
            "pattern": "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordRequest": {
        "required": [
          "newPassword",
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "minLength": 1,
            "type": "string"
          },
          "newPassword": {
            "maxLength": 50,
            "minLength": 8,
            "pattern": "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Response": {
        "required": [
          "csoId",
          "message"
        ],
        "type": "object",
        "properties": {
          "responseId": {
            "type": "integer",
            "format": "int32"
          },
          "enquiryId": {
            "type": "integer",
            "format": "int32"
          },
          "csoId": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "minLength": 1,
            "type": "string"
          },
          "responseDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ResponseDTO": {
        "type": "object",
        "properties": {
          "responseId": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "responseDate": {
            "type": "string",
            "format": "date-time"
          },
          "enquiryId": {
            "type": "integer",
            "format": "int32"
          },
          "subject": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SizeRequest": {
        "required": [
          "sizeName",
          "stockQuantity"
        ],
        "type": "object",
        "properties": {
          "sizeName": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "stockQuantity": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SmsVerificationRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateAddressRequest": {
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 500,
            "minLength": 3,
            "type": "string",
            "nullable": true
          },
          "imageFile": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCreditCardRequest": {
        "type": "object",
        "properties": {
          "cardHolderName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "cardNumber": {
            "maxLength": 16,
            "type": "string",
            "nullable": true
          },
          "expiryMonth": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expiryYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cvv": {
            "maxLength": 3,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateEnquiryRequest": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/EnquiryStatus"
          }
        },
        "additionalProperties": false
      },
      "UpdateMfaRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "mfaTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "enable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateProductRequest": {
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 500,
            "minLength": 3,
            "type": "string",
            "nullable": true
          },
          "longDescription": {
            "maxLength": 1000,
            "minLength": 3,
            "type": "string",
            "nullable": true
          },
          "price": {
            "minimum": 0.01,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "stockQuantity": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "categoryName": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "colors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "fit": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "imageFile": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "sizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SizeRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UploadResponse": {
        "type": "object",
        "properties": {
          "filename": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "User": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "mobileNo": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "dateofBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/UserRole"
          },
          "pfpURL": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "is2FAEnabled": {
            "type": "boolean"
          },
          "isEmailVerified": {
            "type": "boolean"
          },
          "isPhoneVerified": {
            "type": "boolean"
          },
          "referralCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "deleteRequested": {
            "type": "boolean"
          },
          "deleteRequestedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "membership": {
            "$ref": "#/components/schemas/Membership"
          },
          "referralsReceived": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Referral"
            },
            "nullable": true
          },
          "referralsSent": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Referral"
            },
            "nullable": true
          },
          "pointsTransactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PointsTransaction"
            },
            "nullable": true
          },
          "userRedemptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRedemptions"
            },
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "UserBasicDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserRedemptions": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "redemptionId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "voucherId": {
            "type": "integer",
            "format": "int32"
          },
          "pointsUsed": {
            "type": "integer",
            "format": "int32"
          },
          "redemptionDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/RedemptionStatus"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "voucher": {
            "$ref": "#/components/schemas/Voucher"
          }
        },
        "additionalProperties": false
      },
      "UserRole": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "VerifyEmailChangeRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "otp": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Voucher": {
        "type": "object",
        "properties": {
          "voucherId": {
            "type": "integer",
            "format": "int32"
          },
          "voucherCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "voucherType": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "voucherValue": {
            "type": "number",
            "format": "double"
          },
          "pointsRequired": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          },
          "isFirstTimeUseOnly": {
            "type": "boolean"
          },
          "isOneTimeUseOnly": {
            "type": "boolean"
          },
          "voucherLimit": {
            "type": "integer",
            "format": "int32"
          },
          "voucherTitle": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "voucherDesc": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "pointsTransactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PointsTransaction"
            },
            "nullable": true
          },
          "userRedemptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRedemptions"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Token",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}